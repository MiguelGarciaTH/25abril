/* ArticleTop.css */

/* Container for the article and entities */
.container2 {
  margin-left: 1000px; /* Ensure the container is positioned correctly */
  position: relative;
  text-align: left;
  display: flex; /* Use flexbox for layout */
  align-items: center; /* Vertically align children in the center */
  z-index: 1; /* Ensure the container is above other elements */
  overflow: visible; /* Allow child elements to overflow */
  justify-content: flex-start; /* Align items to the left */
  margin-bottom: 100px; /* Reduced margin to minimize vertical spacing */
}

/* Wrapper for the image and title */
.imageWrapper {
  position: relative;
  width: 100%;
  height: 300px; /* Adjusted height for the image */
  overflow: hidden;
  border-radius: 10px;
}

.articleContainer {
  flex: 1;
  cursor: pointer;
  padding: 25px; /* Slightly increased padding */
  border-radius: 10px;
  box-shadow: 0px 6px 16px rgba(0, 0, 0, 0.1);
  position: relative;
  z-index: 2;
  border: 1px solid #ccc;
  background-color: #fff;
  transition: box-shadow 0.3s ease;
  width: 650px; /* Increased width */
  height: auto; /* Adjust height to fit content */
  display: flex;
  flex-direction: column; /* Stack image and content vertically */
  align-items: center; /* Center content horizontally */
}

.articleContainer:hover {
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.articleImage {
  width: 100%;
  height: 280px; /* Increased height for the image */
  object-fit: cover; /* Ensures the image covers the entire area */
  object-position: top; /* Aligns the image to show the top */
  border-radius: 10px 10px 0 0; /* Rounded corners only on the top */
  transition: transform 0.3s ease-in-out;
}

.articleContent {
  padding: 20px;
  width: 100%;
  text-align: left;
}

.articleTitle {
  font-size: 1.8rem;
  font-weight: bold;
  margin: 10px 0;
  color: #333;
}

.articleMeta {
  display: flex;
  justify-content: space-between;
  padding: 10px;
  font-size: 1em;
  color: #666;
}

.siteName {
  font-weight: bold;
}

.score {
  color: #444;
}

/* Entity container styles */
.entityContainer {
  display: flex; /* Use flexbox for layout */
  flex-wrap: wrap; /* Allow wrapping to the next row */
  justify-content: flex-start; /* Align items to the left */
  align-items: flex-start; /* Align items at the top */
  gap: 20px; /* Add spacing between entity circles */
  margin-left: 20px;
  padding: 20px;
  border-radius: 8px;
  width: 100%; /* Allow the container to take full width */
  max-width: 650px; /* Limit the width to match the article container */
  position: relative;
  z-index: 3;
  animation: fadeIn 0.3s ease-in-out;
  visibility: hidden; /* Hide the container initially */
  opacity: 0; /* Make it invisible */
  transition: visibility 0s, opacity 0.3s ease-in-out; /* Smooth fade-in effect */
}

.entityContainer.show {
  visibility: visible; /* Make it visible */
  opacity: 1; /* Fully opaque */
}

.entityCircle {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: calc(20% - 20px); /* Ensure five items per row with spacing */
  max-width: 120px; /* Limit the size of each circle */
  height: 120px; /* Fixed height for the circle */
  border-radius: 50%;
  background-color: #fff;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  position: relative;
  overflow: hidden; /* Ensure the image stays within the circle */
  margin: 0; /* Remove extra margin */
  text-align: center;
  border: 1px solid #ddd;
  transition: transform 0.3s ease-in-out;
  text-decoration: none; /* Remove underline for links */
  color: inherit; /* Inherit text color */
}

.entityCircle:hover {
  transform: scale(1.05); /* Slight zoom effect on hover */
}

.entityImage {
  width: 100%;
  height: 100%;
  object-fit: cover; /* Ensure the image fully fills the circle */
  filter: grayscale(100%); /* Apply grayscale effect */
  transition: filter 0.3s ease-in-out, transform 0.3s ease-in-out;
}

.entityCircle:hover .entityImage {
  filter: grayscale(100%); /* Apply grayscale effect */
  transform: scale(1.1); /* Slight zoom effect on hover */
}

.entityName {
  position: absolute;
  bottom: 10px; /* Position the name near the bottom of the circle */
  font-size: 0.9rem; /* Slightly larger font size */
  font-weight: bold;
  color: white; /* White text color */
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.7); /* Add shadow for better readability */
  text-align: center;
  width: 90%; /* Allow some padding on the sides */
  word-wrap: break-word; /* Wrap text if it overflows */
  line-height: 1.2; /* Adjust line height for better readability */
  pointer-events: none; /* Prevent interaction with the text */
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.contentWrapper {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: flex-start;
  width: 1800px; /* Fixed width to reserve space for both containers */
}

.sliderContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 20px;
  gap: 10px; /* Add spacing between label and slider */
}

.sliderContainer label {
  font-size: 1.5rem;
  font-weight: bold;
  color: #444;
}

.sliderContainer input[type="range"] {
  -webkit-appearance: none; /* Remove default styling for WebKit browsers */
  appearance: none; /* Remove default styling for modern browsers */
  width: 300px;
  height: 10px;
  margin-top: 20px;
  background: linear-gradient(10deg, #333, #333); /* Gradient for the slider track */
  border-radius: 5px;
  outline: none;
  cursor: pointer;
  transition: background 0.3s ease-in-out;
}

.sliderContainer input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none; /* Remove default styling for WebKit browsers */
  appearance: none;
  width: 80px; /* Adjusted size for the image */
  height: 80px; /* Adjusted size for the image */
  background: url("./android-chrome-512x512.png") no-repeat center center; /* Use the image */
  background-size: cover; /* Ensure the image covers the thumb */
  border: none; /* Remove border */
  border-radius: 50%; /* Keep it circular */
  cursor: pointer;
  transform: rotate(30deg) !important; /* Ensure rotation is applied */
  transition: transform 0.2s ease-in-out;
}

.sliderContainer input[type="range"]::-moz-range-thumb {
  width: 70px; /* Adjusted size for the image */
  height: 70px; /* Adjusted size for the image */
  background: url("./android-chrome-512x512.png") no-repeat center center; /* Use the image */
  background-size: cover; /* Ensure the image covers the thumb */
  border: none; /* Remove border */
  border-radius: 50%; /* Keep it circular */
  cursor: pointer;
  transform: rotate(30deg) !important; /* Ensure rotation is applied */
  transition: transform 0.2s ease-in-out;
}

.sliderContainer input[type="range"]::-ms-thumb {
  width: 80px; /* Adjusted size for the image */
  height: 80px; /* Adjusted size for the image */
  background: url("./android-chrome-512x512.png") no-repeat center center; /* Use the image */
  background-size: cover; /* Ensure the image covers the thumb */
  border: none; /* Remove border */
  border-radius: 50%; /* Keep it circular */
  cursor: pointer;
  transform: rotate(30deg) !important; /* Ensure rotation is applied */
  transition: transform 0.2s ease-in-out;
}

.articlesWrapper {
  display: flex;
  flex-direction: column;
  gap: 20px; /* Add spacing between ArticleTopElement components */
}

.bannerLink {
  width: 150px; /* Reserve space for the banner */
  margin-right: 20px; /* Add spacing between the banner and the contentWrapper */
  display: flex;
  align-items: center; /* Center the banner vertically */
  visibility: hidden; /* Hide the banner by default */
}

.bannerLink.show {
  visibility: visible; /* Make the banner visible when needed */
}

.bannerImage {
  width: 150px; /* Adjust the width of the banner */
  height: auto; /* Maintain aspect ratio */
  border-radius: 8px; /* Add rounded corners */
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); /* Add a subtle shadow */
  transition: transform 0.3s ease-in-out;
}

.bannerImage:hover {
  transform: scale(1.05); /* Slight zoom effect on hover */
}

.customToolTipLink {
  text-decoration: none; /* Remove underline for the link */
  color: inherit; /* Inherit text color */
  display: inline-block; /* Ensure the tooltip behaves like a block element */
}

.customToolTipLink:hover .customToolTip {
  transform: scale(1.05); /* Slight zoom effect on hover */
}

.customToolTip {
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 8px;
  padding: 10px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease-in-out;
}

.toolTipName {
  font-weight: bold;
  font-size: 1rem;
  color: #333;
}

.toolTipCount {
  font-size: 0.9rem;
  color: #666;
}

.toggleContainer {
  display: flex;
  justify-content: center;
  gap: 20px;
  margin-top: 10px;
}

.toggleContainer label {
  font-size: 18px;
  cursor: pointer;
}

.toggleButton {
  font-size: 18px;
  font-weight: bold;
  padding: 10px 20px;
  border: 2px solid #444;
  border-radius: 20px;
  background-color: #fff;
  color: #444;
  cursor: pointer;
  transition: background-color 0.3s ease, color 0.3s ease;
}

.toggleButton:hover {
  background-color: #444;
  color: #fff;
}

.toggleSwitch {
  width: 110px;
  height: 40px;
  border-radius: 20px;
  background-color: #ccc;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 10px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.toggleSwitch.on {
  background-color: #f44336; /* Green for "Relev√¢ncia" */
}

.toggleSwitch.off {
  background-color: #414141; /* Red for "Entidades" */
}

.toggleLabel {
  color: #fff;
  font-size: 14px;
  font-weight: bold;
  text-align: center;
  flex: 1;
}

.toggleWrapper {
  position: relative;
  width: 180px; /* Increased width to fully accommodate text */
  height: 50px;
  background-color: #ccc;
  border-radius: 20px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  cursor: pointer;
  padding: 0 5px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  overflow: hidden; /* Ensure text stays within the button */
}

.toggleSlider {
  position: absolute;
  width: 48%;
  height: 80%;
  background-color: #5f5f5f;
  border-radius: 20px;
  transition: transform 0.3s ease;
}

.toggleSlider.left {
  transform: translateX(0);
}

.toggleSlider.right {
  transform: translateX(100%);
  background-color: #5f5f5f;
}

.toggleOption {
  flex: 1;
  text-align: center;
  font-size: 14px; /* Reduced font size to fit text */
  font-weight: bold;
  color: #fff;
  z-index: 1;
  padding: 0 5px; /* Add padding to prevent text from touching edges */
  white-space: nowrap; /* Prevent text from wrapping */
  overflow: hidden; /* Hide overflowing text */
  text-overflow: ellipsis; /* Add ellipsis for overflowing text */
}

@media (max-width: 768px) {
  .dataContainer {
    padding: 10px;
  }

  .controlsContainer {
    flex-direction: column;
    gap: 10px;
  }

  .toggleContainer {
    margin-bottom: 10px;
  }

  .articleTopContainer h1 {
    font-size: 0.5rem;
  }

  .toggleOption {
    font-size: 10px; /* Reduced font size to fit text */
  }

  .toggleWrapper {
    margin-left: 30%;
    width: 200px; /* Increased width to fully accommodate text */
    height: 25px;

  }

  .sliderContainer label {
    font-size: 1.0rem;
  }

  .sliderContainer input[type="range"] {
    width: 200px;
    height: 10px;
    margin-top: 20px;
  }
  
  .sliderContainer input[type="range"]::-webkit-slider-thumb {
    width: 40px; /* Adjusted size for the image */
    height: 40px; /* Adjusted size for the image */
  }

  .sliderContainer input[type="range"]::-moz-range-thumb {
    width: 40px; /* Adjusted size for the image */
    height: 40px; /* Adjusted size for the image */
  }

  .sliderContainer input[type="range"]::ms-thumb {
    width: 40px; /* Adjusted size for the image */
    height: 40px; /* Adjusted size for the image */
  }

  .articleTopContainer {
    padding: 10px;
  }

  .articlesWrapper {
    flex-direction: column;
    gap: 15px;
  }

  .container2 {
    margin-left: 15%;
    flex-direction: column;
    align-items: flex-start;
    margin-bottom: 20px;
  }

  .contentWrapper {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: flex-start;
    width: 50%; /* Fixed width to reserve space for both containers */
  }

  .articlesWrapper {
    display: flex;
    margin-left: 25%;
    flex-direction: column;
    gap: 20px; /* Add spacing between ArticleTopElement components */
  }

  .articleContainer {
    width: 100%;
    padding: 15px;
    box-shadow: none;
    border: 1px solid #ddd;
  }

  .articleTitle {
    font-size: 0.8rem;
    font-weight: bold;
    margin: 10px 0;
    color: #333;
  }

  .score {
    font-size: 0.8rem;
  }
  .siteName {
    font-size: 0.8rem;
    font-weight: bold;
  }

  .articleImage {
    height: 50px;
    width: 100%;
    object-fit:fill; /* Ensures the image covers the entire area */
  }

  .entityContainer {
    flex-wrap: wrap;
    gap: 10px;
    margin-left: 0;
    padding: 10px;
  }

  .entityCircle {
    width: calc(33.33% - 10px);
    max-width: 100px;
    height: 100px;
  }

  .entityName {
    font-size: 0.8rem;
  }
}
